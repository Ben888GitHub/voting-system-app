{"version":3,"sources":["images/MrWorlLogo.png","components/PaymentPage.js","components/StripeContainer.js","components/CharacterList.js","App.js","index.js"],"names":["PaymentPage","latestPrice","modalData","showPayment","paymentReady","paymentCancel","setShowPayment","initVotePoints","charName","useState","staticValue","setStaticValue","stripe","useStripe","elements","useElements","name","email","billingDetails","setBillingDetails","showAlert","setShowAlert","toggleAlert","showSuccess","setShowSuccess","openSuccess","closeSuccess","showFailure","setShowFailure","openFailure","closeFailure","errorCode","setErrorCode","disabledButton","setDisabledButton","loadPayment","setLoadPayment","showSpinner","setShowSpinner","SpinnerComponent","Spinner","as","animation","size","role","aria-hidden","theHandleSubmit","event","a","preventDefault","createPaymentMethod","type","card","getElement","CardElement","billing_details","result","error","console","log","paymentMethod","id","axios","post","amount","payment_method_id","points","char_id","cust_name","cust_email","response","data","requires_action","payment_intent_client_secret","handleCardAction","then","paymentIntent","status","payment_intent_id","output","config","responsePayment","success","message","Modal","show","onHide","keyboard","backdrop","Header","closeButton","Title","style","padding","onSubmit","Form","Group","Label","fontWeight","Control","value","onChange","e","target","placeholder","required","autocomplete","controlId","marginTop","borderStyle","borderColor","borderWidth","borderRadius","onReady","el","focus","options","base","color","backgroundColor","fontFamily","fontSize","fontSmoothing","invalid","iconColor","display","justifyContent","Button","disabled","variant","width","textAlign","height","alignSelf","Body","Math","round","toFixed","onClick","Alert","onClose","dismissible","Heading","stripeTestPromise","loadStripe","StripeContainer","CharacterList","showTopHeader","setShowTopHeader","setShow","charData","setCharData","setModalData","setInitVotePoints","totalVotePoints","setTotalVotePoints","initialPrice","newPrice","setNewPrice","showReset","setShowReset","justifyCenter","setJustifyCenter","charId","useParams","useEffect","get","fetchSingleChar","fetchAllCharacters","handleClose","handleShow","queryId","ResetButton","marginLeft","paddingTop","Navbar","bg","className","Image","src","MrWorldLogo","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","tablet","mobile","ssr","infinite","arrows","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","dotListClass","itemClass","map","charImg","Card","charBio","IconButton","aria-label","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a05203d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MrWorlLogo.16c111a6.png\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, Modal, Toast, Alert, Spinner } from \"react-bootstrap\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nfunction PaymentPage({\n  latestPrice,\n  modalData,\n  paymentReady,\n  paymentCancel,\n  showPayment,\n  setShowPayment,\n  initVotePoints,\n  charName,\n}) {\n  const [showResult, setShowResult] = useState(false);\n\n  const openResult = () => setShowResult(true);\n  const closeResult = () => setShowResult(false);\n\n  const [staticValue, setStaticValue] = useState(\"non-static\");\n\n  const cancelPayment = () => {\n    setShowPayment(false);\n  };\n\n  const hidePayment = () => {\n    setShowPayment(false);\n    openResult();\n  };\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [billingDetails, setBillingDetails] = useState({\n    name: \"\",\n    email: \"\",\n  });\n\n  const [showAlert, setShowAlert] = useState(false);\n  const toggleAlert = () => setShowAlert(true);\n  const closeAlert = () => setShowAlert(false);\n\n  const [showSuccess, setShowSuccess] = useState(false);\n  const openSuccess = () => {\n    setShowSuccess(true);\n    setShowPayment(false);\n  };\n  const closeSuccess = () => setShowSuccess(false);\n\n  const [showFailure, setShowFailure] = useState(false);\n  const openFailure = () => {\n    setShowFailure(true);\n    setShowPayment(false);\n  };\n  const closeFailure = () => setShowFailure(false);\n\n  const [errorCode, setErrorCode] = useState(\"\");\n\n  const [amountVal, setAmountVal] = useState(0);\n\n  const [finalVotePoints, setFinalVotePoints] = useState(0);\n\n  const [disabledButton, setDisabledButton] = useState(false);\n\n  const [loadPayment, setLoadPayment] = useState(\"Complete Payment\");\n\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const [paymentIntentId, setPaymentIntentId] = useState(\"\");\n\n  const CARD_OPTIONS = {\n    style: {\n      base: {\n        color: \"#000\",\n        backgroundColor: \"white\",\n        fontWeight: 500,\n        fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n        fontSize: \"18px\",\n        fontSmoothing: \"antialiased\",\n        \":-webkit-autofill\": {\n          color: \"#fce883\",\n        },\n\n        \":focus::placeholder\": {\n          color: \"#fff\",\n        },\n        invalid: {\n          color: \"#fa755a\",\n          iconColor: \"#fa755a\",\n        },\n      },\n    },\n  };\n\n  // The Spinner Component\n  const SpinnerComponent = () => {\n    return (\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    );\n  };\n\n  const theHandleSubmit = async (event) => {\n    event.preventDefault();\n\n    const result = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n      billing_details: billingDetails,\n    });\n\n    if (!result.error) {\n      console.log(\"Stripe 23 | Token Generated\", result.paymentMethod);\n      console.log(result.paymentMethod.id);\n      setDisabledButton(true);\n      setStaticValue(\"static\");\n      setLoadPayment(\"Processing...\");\n      setShowSpinner(true);\n\n      try {\n        const response = await axios.post(\n          \"https://voting-payments.xctuality.com/stripe/charge\",\n          {\n            amount: latestPrice * 100,\n            payment_method_id: result.paymentMethod.id,\n            points: initVotePoints,\n            char_id: modalData.id,\n            charName: charName,\n            // stripeTransactionId: paymentIntentId, //todo\n            cust_name: billingDetails.name,\n            cust_email: billingDetails.email,\n          }\n        );\n        console.log(response.data);\n        if (response.data.error) {\n          console.log(response.data.error);\n          setErrorCode(response.data.error);\n          openFailure();\n          setDisabledButton(false);\n          setStaticValue(\"non-static\");\n          setLoadPayment(\"Complete Payment\");\n          setShowSpinner(false);\n          setBillingDetails({\n            name: \"\",\n            email: \"\",\n          });\n        }\n\n        if (response.data.requires_action) {\n          console.log(response.data);\n          console.log(response.data.requires_action);\n          console.log(response.data.payment_intent_client_secret);\n          stripe\n            .handleCardAction(response.data.payment_intent_client_secret)\n            .then((data) => {\n              if (data.error) {\n                console.log(data.error);\n                console.log(\n                  \"Your card was not authenticated, please try again\"\n                );\n                setErrorCode(\n                  \"Your card was not authenticated, please try again\"\n                );\n                openFailure();\n                setDisabledButton(false);\n                setStaticValue(\"non-static\");\n                setLoadPayment(\"Complete Payment\");\n                setShowSpinner(false);\n                setBillingDetails({\n                  name: \"\",\n                  email: \"\",\n                });\n              } else if (\n                data.paymentIntent.status === \"requires_confirmation\"\n              ) {\n                console.log(data.paymentIntent.id);\n                // setPaymentIntentId(data.paymentIntent.id); //todo\n\n                const responsePayment = async () => {\n                  await axios\n                    .post(\n                      \"https://voting-payments.xctuality.com/stripe/charge\",\n                      {\n                        payment_intent_id: data.paymentIntent.id,\n                      }\n                    )\n                    .then((output) => {\n                      if (!output) {\n                        console.log(\"Payment error\");\n                      } else {\n                        console.log(output);\n                        console.log(output.data); // {success: true}\n                        console.log(output.config.data); //this represents the paymentIntent id\n                        // console.log(response.data.payment_intent_client_secret);\n\n                        if (!output.data.error) {\n                          console.log(\"3D Secure Payment Successful\");\n                          // setPaymentIntentId(data.paymentIntent.id); //todo\n                          openSuccess();\n                          setDisabledButton(false);\n                          setStaticValue(\"non-static\");\n                          setLoadPayment(\"Complete Payment\");\n                          setShowSpinner(false);\n                          setBillingDetails({\n                            name: \"\",\n                            email: \"\",\n                          });\n                        }\n                        if (output.data.error) {\n                          // setPaymentIntentId(data.paymentIntent.id); //todo\n                          console.log(\"3D Secure Payment Failure\");\n                          setErrorCode(output.data.error);\n                          openFailure();\n                          setDisabledButton(false);\n                          setStaticValue(\"non-static\");\n                          setLoadPayment(\"Complete Payment\");\n                          setShowSpinner(false);\n                          setBillingDetails({\n                            name: \"\",\n                            email: \"\",\n                          });\n                        }\n                      }\n                    });\n                };\n                responsePayment();\n              }\n            });\n        }\n\n        if (response.data.success) {\n          console.log(\"CheckoutForm.js 25 | payment successful!\");\n          openSuccess();\n          setDisabledButton(false);\n          setStaticValue(\"non-static\");\n          setLoadPayment(\"Complete Payment\");\n          setShowSpinner(false);\n          setBillingDetails({\n            name: \"\",\n            email: \"\",\n          });\n        }\n        if (!response.data.success) {\n          console.log(\"Payment Intent Process...\");\n        }\n      } catch (error) {\n        console.log(error.message);\n        toggleAlert();\n        setStaticValue(\"non-static\");\n        setLoadPayment(\"Complete Payment\");\n        setDisabledButton(false);\n        setShowSpinner(false);\n      }\n    } else {\n      console.log(result.error.message);\n      toggleAlert();\n      setStaticValue(\"non-static\");\n      setLoadPayment(\"Complete Payment\");\n      setDisabledButton(false);\n      setShowSpinner(false);\n    }\n  };\n\n  return (\n    <div>\n      <Modal\n        show={showPayment}\n        onHide={cancelPayment}\n        keyboard={true}\n        backdrop={staticValue}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Process Payment</Modal.Title>\n        </Modal.Header>\n        <div\n          style={{\n            padding: 40,\n          }}\n        >\n          {/* <form onSubmit={handleSubmit}> */}\n          <form onSubmit={theHandleSubmit}>\n            <Form.Group>\n              <Form.Label style={{ fontWeight: 500 }}>\n                Cardholder Name\n              </Form.Label>\n              <Form.Control\n                value={billingDetails.name}\n                onChange={(e) => {\n                  setBillingDetails({\n                    ...billingDetails,\n                    name: e.target.value,\n                  });\n                }}\n                type=\"text\"\n                placeholder=\"Cardholder Name\"\n                required\n                autocomplete=\"name\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label style={{ fontWeight: 500 }}>Email</Form.Label>\n              <Form.Control\n                value={billingDetails.email}\n                onChange={(e) => {\n                  setBillingDetails({\n                    ...billingDetails,\n                    email: e.target.value,\n                  });\n                }}\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n              />\n            </Form.Group>\n\n            <h5 style={{ marginTop: 20 }}>Card Details</h5>\n            <div\n              style={{\n                borderStyle: \"solid\",\n                borderColor: \"#CED4D9\",\n                borderWidth: 1.8,\n                borderRadius: 2,\n                padding: 5,\n              }}\n            >\n              <CardElement\n                onReady={(el) => el.focus()}\n                options={CARD_OPTIONS}\n              />\n            </div>\n            <br />\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button\n                disabled={disabledButton}\n                variant=\"dark\"\n                type=\"submit\"\n                style={{ width: \"50%\", fontWeight: 600 }}\n              >\n                {loadPayment}\n                {showSpinner ? <SpinnerComponent /> : null}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n\n      <div>\n        <Modal\n          show={showSuccess}\n          onHide={closeSuccess}\n          keyboard={true}\n          backdrop={staticValue}\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          <br />\n          <br />\n          <CheckCircleRoundedIcon\n            style={{\n              width: 80,\n              height: 80,\n              color: \"#27A844\",\n              alignSelf: \"center\",\n            }}\n          />\n          <h3 style={{ color: \"#27A844\", marginTop: 15 }}>\n            Payment Successful\n          </h3>\n          <Modal.Body style={{ fontWeight: \"600\" }}>\n            You have successfully given {initVotePoints} vote(s) to {charName}{\" \"}\n          </Modal.Body>\n          <h1>${Math.round(latestPrice).toFixed(2)}</h1>\n          {/* <h1>${latestPrice}</h1> */}\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              style={{ fontWeight: \"600\", width: \"65%\", marginTop: 30 }}\n              variant=\"success\"\n              onClick={() => {\n                closeSuccess();\n              }}\n            >\n              Done\n            </Button>\n          </div>\n          <br />\n          <br />\n        </Modal>\n      </div>\n\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", height: \"900%\" }}\n      >\n        <Modal\n          show={showFailure}\n          // onHide={closeResult}\n          onHide={closeFailure}\n          keyboard={true}\n          backdrop={staticValue}\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          <br />\n          <br />\n          <CancelRoundedIcon\n            style={{\n              width: 80,\n              height: 80,\n              color: \"#DC3544\",\n              alignSelf: \"center\",\n            }}\n          />\n          <h3 style={{ color: \"#DC3544\", marginTop: 15 }}>Payment Failure</h3>\n          <h4>\n            Sorry, we are unable to process <br /> your payment\n          </h4>\n\n          <Modal.Body style={{ fontWeight: \"500\", fontSize: 18 }}>\n            Your bank replied with this error:{\" \"}\n            <p style={{ color: \"#DC3544\" }}>{errorCode}</p>\n            Please check your payment details and try again.\n          </Modal.Body>\n\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              style={{ fontWeight: \"600\", width: \"65%\", marginTop: 30 }}\n              variant=\"danger\"\n              onClick={() => {\n                closeFailure();\n              }}\n            >\n              OK\n            </Button>\n          </div>\n          <br />\n          <br />\n        </Modal>\n      </div>\n\n      <Modal show={showAlert} onHide={closeAlert} keyboard={false}>\n        <Alert\n          show={showAlert}\n          variant=\"danger\"\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          <Alert.Heading>Please verify your input details</Alert.Heading>\n        </Alert>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentPage;\n","import React from \"react\";\nimport PaymentPage from \"./PaymentPage\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nconst PUBLIC_KEY = \"pk_live_bYVNIkPB8GD7qb69N3SmysbF\";\n// const PUBLIC_KEY = \"pk_test_pERZfDNY0IOQRLZWvn527yLx\";\n\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\n\nfunction StripeContainer({\n  latestPrice,\n  modalData,\n  paymentCancel,\n  paymentReady,\n  showPayment,\n  setShowPayment,\n  initVotePoints,\n  charName,\n}) {\n  return (\n    <Elements stripe={stripeTestPromise}>\n      <PaymentPage\n        latestPrice={latestPrice}\n        modalData={modalData}\n        paymentCancel={paymentCancel}\n        paymentReady={paymentReady}\n        showPayment={showPayment}\n        setShowPayment={setShowPayment}\n        initVotePoints={initVotePoints}\n        charName={charName}\n      />\n    </Elements>\n  );\n}\n\nexport default StripeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport \"./CharacterList.css\";\nimport { Navbar, Image, Button, Modal, Card } from \"react-bootstrap\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nimport RemoveCircleRoundedIcon from \"@material-ui/icons/RemoveCircleRounded\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport MrWorldLogo from \"../images/MrWorlLogo.png\";\nimport axios from \"axios\";\nimport StripeContainer from \"./StripeContainer\";\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\n\nfunction CharacterList() {\n  const [showTopHeader, setShowTopHeader] = useState(true); //todo\n\n  const [show, setShow] = useState(false);\n\n  const [charData, setCharData] = useState([]);\n\n  const [modalData, setModalData] = useState({});\n  const [initVotePoints, setInitVotePoints] = useState(1);\n  const [totalVotePoints, setTotalVotePoints] = useState(0);\n  const [initialPrice, setInitialPrice] = useState(11); // 1 vote = $11.00\n  const [newPrice, setNewPrice] = useState(0);\n  const latestPrice = newPrice + initialPrice;\n\n  const [showPayment, setShowPayment] = useState(false);\n\n  const [showReset, setShowReset] = useState(false);\n\n  const [justifyCenter, setJustifyCenter] = useState(\"\");\n\n  // URL id\n  const { charId } = useParams();\n\n  useEffect(() => {\n    if (!charId) {\n      const fetchAllCharacters = async () => {\n        try {\n          const response = await axios.get(\n            \"https://voteapi.xctuality.com/characters\"\n          );\n          setCharData(response.data.data);\n        } catch (error) {}\n      };\n      fetchAllCharacters();\n    } else {\n      const fetchSingleChar = async () => {\n        try {\n          const response = await axios.get(\n            `https://voteapi.xctuality.com/character/${charId}`\n          );\n          console.log(response.data.data);\n          setCharData(response.data.data);\n          setShowTopHeader(false);\n          setJustifyCenter(\"justify-center\");\n        } catch (error) {\n          // console.log(error);\n        }\n      };\n      fetchSingleChar();\n    }\n  }, []);\n\n  const handleClose = () => setShow(false);\n  const handleShow = async (value) => {\n    setShow(true);\n    setModalData(value);\n    const queryId = await axios.get(\n      `https://voteapi.xctuality.com/votes/${value.id}`\n    );\n    setTotalVotePoints(queryId.data.data);\n  };\n\n  // Once the Process Payment Modal Start, then Voting Modal will close\n  const paymentReady = () => {\n    setShowPayment(true);\n    handleClose();\n  };\n  const paymentCancel = () => setShowPayment(false);\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 1920 },\n      items: 7,\n      slidesToSlide: 7,\n    },\n    desktop: {\n      // breakpoint: { max: 3000, min: 1024 },\n      breakpoint: { max: 1920, min: 1200 },\n      items: 5, // 3\n      slidesToSlide: 5, // 3\n    },\n    tablet: {\n      // breakpoint: { max: 1024, min: 464 },\n      breakpoint: { max: 1200, min: 768 },\n      items: 3, // optional, default to 2.\n      slidesToSlide: 3, // optional, default to 2.\n    },\n    mobile: {\n      breakpoint: { max: 768, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n\n  const ResetButton = () => {\n    return (\n      <Button\n        onClick={() => {\n          setInitVotePoints(1);\n          setNewPrice(0);\n          setShowReset(false);\n        }}\n        style={{\n          marginLeft: 10,\n          fontSize: 16,\n          fontWeight: \"600\",\n          height: 30,\n          marginTop: 12.5,\n          borderRadius: 15,\n          paddingTop: 2,\n        }}\n        variant=\"dark\"\n      >\n        Reset\n      </Button>\n    );\n  };\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" className=\"navbar-height\"></Navbar>\n      {showTopHeader ? (\n        <h1 className=\"top-voting-header\">\n          VOTE TODAY\n          <Image className=\"mr-world-logo\" src={MrWorldLogo} />\n          12 DECEMBER\n        </h1>\n      ) : null}\n\n      <Carousel\n        swipeable={true}\n        draggable={false}\n        showDots={true}\n        responsive={responsive}\n        ssr={true}\n        infinite={false} //todo\n        arrows={true}\n        autoPlaySpeed={1000}\n        keyBoardControl={true}\n        customTransition=\"all .5\"\n        transitionDuration={500}\n        containerClass={`carousel-container ${justifyCenter}`}\n        dotListClass=\"custom-dot-list-style\"\n        itemClass=\"carousel-item-padding-40-px\"\n      >\n        {charData.map((value) => {\n          return (\n            <div key={value}>\n              <Image className=\"character-image\" src={value.charImg} />\n              <br />\n              <div\n                style={{ marginTop: -130 }}\n                className=\"col d-flex justify-content-center\"\n              >\n                <Card className=\"card-style-main\">\n                  <Card.Body>\n                    <h5 className=\"character-name-card\">{value.charName}</h5>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => handleShow(value)}\n                    >\n                      See Profile\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </div>\n              <br />\n              <br />\n            </div>\n          );\n        })}\n      </Carousel>\n      <br />\n      <br />\n      <Modal show={show} onHide={handleClose} keyboard={true}>\n        <Modal.Header closeButton>\n          <h3 className=\"character-name-card modal-title w-100 text-center\">\n            {modalData.charName}\n          </h3>\n        </Modal.Header>\n\n        <h5\n          style={{ fontWeight: \"bold\", marginTop: 5 }}\n          className=\"modal-title w-100 text-center\"\n        >\n          Current Votes: {totalVotePoints}\n        </h5>\n        <Modal.Body className=\"modal-title w-100 text-center\">\n          {modalData.charBio}\n        </Modal.Body>\n        <Image className=\"modal-character-image\" src={modalData.charImg} />\n        <div className=\"button-style-main\">\n          <IconButton\n            aria-label=\"remove\"\n            onClick={() => {\n              if (initVotePoints > 1) {\n                setInitVotePoints(initVotePoints - 1);\n                setNewPrice(newPrice - 11);\n                // setShowReset(false);\n              }\n            }}\n          >\n            <RemoveCircleRoundedIcon\n              style={{ fontSize: 30, color: \"#333B3F\" }}\n            />\n          </IconButton>\n\n          <h5 style={{ marginTop: 14 }}>Your Vote: {initVotePoints}</h5>\n\n          <IconButton\n            aria-label=\"add\"\n            onClick={() => {\n              if (initVotePoints < 50) {\n                setInitVotePoints(initVotePoints + 1);\n                setNewPrice(initialPrice * initVotePoints);\n                if (initVotePoints > 0) {\n                  setShowReset(true);\n                }\n              }\n            }}\n          >\n            <AddCircleRoundedIcon style={{ fontSize: 30, color: \"#333B3F\" }} />\n          </IconButton>\n          {showReset ? <ResetButton /> : null}\n        </div>\n\n        <div className=\"button-vote-position\">\n          <Button onClick={paymentReady} variant=\"dark\" className=\"button-vote\">\n            VOTE ${Math.round(initialPrice).toFixed(2) * initVotePoints}\n          </Button>\n        </div>\n      </Modal>\n\n      <StripeContainer\n        latestPrice={latestPrice}\n        modalData={modalData}\n        paymentCancel={paymentCancel}\n        paymentReady={paymentReady}\n        showPayment={showPayment}\n        setShowPayment={setShowPayment}\n        initVotePoints={initVotePoints}\n        charName={modalData.charName}\n      />\n    </div>\n  );\n}\n\nexport default CharacterList;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CharacterList } from \"./components\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/:charId\" component={CharacterList} />\n        <Route path=\"/\" exact component={CharacterList} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n{\n  /* <React.StrictMode></React.StrictMode> */\n}\n"],"sourceRoot":""}